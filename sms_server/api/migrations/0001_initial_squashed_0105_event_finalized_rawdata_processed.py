# Generated by Django 4.2.4 on 2024-07-14 19:38

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# api.migrations.0062_populate_venue_name_lower

class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_alter_venue_latitude_alter_venue_longitude'), ('api', '0003_openmic_crontab_string'), ('api', '0004_alter_openmic_title_alter_show_doors_open_and_more'), ('api', '0005_remove_show_show_start_show_show_day_show_start_time_and_more'), ('api', '0006_alter_show_unique_together_and_more'), ('api', '0007_event_delete_show'), ('api', '0008_rename_openmic_openmicgenerator'), ('api', '0009_venue_venue_api_venue_venue_id'), ('api', '0010_rename_venue_id_venue_venue_api_id'), ('api', '0011_venue_city_venue_postal_code'), ('api', '0012_alter_venue_latitude_alter_venue_longitude'), ('api', '0013_alter_event_start_time_alter_event_unique_together'), ('api', '0014_remove_event_ticket_price_event_ticket_price_max_and_more'), ('api', '0015_alter_venue_name'), ('api', '0016_venuealias'), ('api', '0017_venuealias_venue'), ('api', '0018_alter_event_venue_alter_openmicgenerator_venue_and_more'), ('api', '0019_rename_exists_venue_gather_data_venue_show_venue'), ('api', '0020_event_event_url'), ('api', '0021_alter_venue_venue_api'), ('api', '0022_remove_venue_venue_api_remove_venue_venue_api_id_and_more'), ('api', '0023_alter_venueapi_unique_together'), ('api', '0024_rename_venue_api_id_venueapi_api_id_and_more'), ('api', '0025_venuemask_alter_event_event_api_and_more'), ('api', '0026_venuemask_address'), ('api', '0027_venuemask_city_venuemask_postal_code'), ('api', '0028_event_description_alter_event_event_api_and_more'), ('api', '0029_alter_event_unique_together_event_is_ticketed_and_more'), ('api', '0030_openmic_event_end_time_venue_venue_type_and_more'), ('api', '0031_event_show_event_openmic_generate_events'), ('api', '0032_event_signup_start_time_alter_openmic_venue'), ('api', '0033_alter_event_event_api_alter_openmic_open_mic_type_and_more'), ('api', '0034_alter_event_event_api_alter_venueapi_api_name'), ('api', '0035_apisample'), ('api', '0036_apisample_date'), ('api', '0037_alter_apisample_name'), ('api', '0038_remove_apisample_date_apisample_created_at_and_more'), ('api', '0039_openmic_drums_alter_venue_venue_type'), ('api', '0040_alter_openmic_venue'), ('api', '0041_venueapi_crawler_name'), ('api', '0042_event_cash_only_alter_event_end_time_and_more'), ('api', '0043_alter_event_unique_together_alter_event_start_time_and_more'), ('api', '0044_alter_event_description'), ('api', '0045_alter_apisample_api_name_alter_event_event_api_and_more'), ('api', '0046_venue_venue_url'), ('api', '0047_event_event_image'), ('api', '0048_venue_venue_image'), ('api', '0049_rename_event_image_event_event_image_url'), ('api', '0050_venue_venue_image_url'), ('api', '0051_event_event_image'), ('api', '0052_alter_event_description'), ('api', '0053_venuetags_eventtags'), ('api', '0054_eventtags_created_at_openmic_event_mic_type_and_more'), ('api', '0055_delete_eventtags'), ('api', '0056_venuetag_alter_venue_venue_type_delete_venuetags_and_more'), ('api', '0057_remove_venue_venue_type'), ('api', '0058_alter_event_event_image_url_and_more'), ('api', '0059_venue_neighborhood'), ('api', '0060_alter_apisample_api_name_alter_event_event_api_and_more'), ('api', '0061_venue_name_lower'), ('api', '0062_populate_venue_name_lower'), ('api', '0063_alter_venue_name_lower'), ('api', '0064_alter_venue_latitude_alter_venue_longitude'), ('api', '0065_alter_venue_latitude_alter_venue_longitude'), ('api', '0066_ingestionrun_ingestionrecordbase_and_more'), ('api', '0067_ingestionrun_name'), ('api', '0068_alter_ingestionrecordbase_change_type_and_more'), ('api', '0069_ingestionrecordaggregate'), ('api', '0070_alter_ingestionrecordaggregate_api_name'), ('api', '0071_alter_ingestionrecordbase_api_name'), ('api', '0072_ingestionrecord_remove_ingestionrecordevent_event_and_more'), ('api', '0073_remove_ingestionrecordbase_ingestion_run_and_more'), ('api', '0074_alter_event_event_image'), ('api', '0075_alter_venue_venue_image'), ('api', '0076_alter_ingestionrecord_event_and_more'), ('api', '0077_venue_match'), ('api', '0078_rename_match_venue_alias'), ('api', '0079_delete_venuemask'), ('api', '0080_alter_venue_alias'), ('api', '0081_rawevent'), ('api', '0082_rawevent_created_at'), ('api', '0083_remove_event_cash_only_remove_event_doors_open_and_more'), ('api', '0084_rawvenue'), ('api', '0085_remove_venue_gather_data_remove_venue_max_capacity'), ('api', '0086_rawvenue_finalized_venue'), ('api', '0087_remove_rawevent_venue_api_id_and_more'), ('api', '0088_alter_rawvenue_unique_together_and_more'), ('api', '0089_artist_sociallink'), ('api', '0090_event_artists'), ('api', '0091_rawdata'), ('api', '0092_crawler'), ('api', '0093_delete_venueapi'), ('api', '0094_delete_apisample'), ('api', '0095_janitorrun_janitorrecord'), ('api', '0096_remove_ingestionrecord_change_log_and_more'), ('api', '0097_ingestionrecord_change_log_and_more'), ('api', '0098_artist_name_slug'), ('api', '0099_rawdata_event_day'), ('api', '0100_event_raw_datas'), ('api', '0101_alter_janitorrecord_field_changed'), ('api', '0102_artist_artist_image_artist_artist_image_url_and_more'), ('api', '0103_alter_venue_latitude_alter_venue_longitude'), ('api', '0104_carpenterrecord_rename_janitorrun_carpenterrun_and_more'), ('api', '0105_event_finalized_rawdata_processed')]

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('address', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('max_capacity', models.IntegerField(default=-1)),
                ('gather_data', models.BooleanField(default=True)),
                ('city', models.CharField(default='Seattle', max_length=64)),
                ('postal_code', models.CharField(default=98107, max_length=8)),
                ('show_venue', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('venue_url', models.CharField(blank=True, max_length=256, null=True)),
                ('venue_image', models.ImageField(blank=True, upload_to='venue_images')),
                ('venue_image_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('neighborhood', models.CharField(blank=True, choices=[('Ballard', 'Ballard'), ('Belltown', 'Belltown'), ('Capitol Hill', 'Capitol Hill'), ('Downtown', 'Downtown'), ('Fremont', 'Fremont'), ('Greenlake', 'Greenlake'), ('Magnolia', 'Magnolia'), ('Phinney Ridge', 'Phinney Ridge'), ('Queen Anne', 'Queen Anne'), ('University District', 'University District'), ('West Seattle', 'West Seattle')], max_length=64, null=True)),
                ('name_lower', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'unique_together': {('latitude', 'longitude')},
            },
        ),
        migrations.CreateModel(
            name='VenueMask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proper_name', models.CharField(max_length=128, unique=True)),
                ('match', models.JSONField(max_length=256)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.venue')),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=64, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='APISample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('api_name', models.CharField(choices=[('AXS', 'AXS'), ('Crawler', 'Crawler'), ('Dice', 'Dice'), ('Eventbrite', 'Eventbrite'), ('Manual', 'Manual'), ('Open Mic Generator', 'Open Mic Generator'), ('Ticketmaster', 'Ticketmaster'), ('TIXR', 'TIXR'), ('Venuepilot', 'Venuepilot')], default='Manual', max_length=20)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='VenueApi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_name', models.CharField(choices=[('AXS', 'AXS'), ('Crawler', 'Crawler'), ('Dice', 'Dice'), ('Eventbrite', 'Eventbrite'), ('Manual', 'Manual'), ('Open Mic Generator', 'Open Mic Generator'), ('Ticketmaster', 'Ticketmaster'), ('TIXR', 'TIXR'), ('Venuepilot', 'Venuepilot')], default='Manual', max_length=20)),
                ('api_id', models.CharField(blank=True, max_length=32, null=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.venue')),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('crawler_name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'unique_together': {('venue', 'api_name')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('Open Jam', 'Open Jam'), ('Open Mic', 'Open Mic'), ('Show', 'Show')], default='Show', max_length=16)),
                ('title', models.CharField(max_length=256)),
                ('event_day', models.DateField()),
                ('start_time', models.TimeField(blank=True, default=None, null=True)),
                ('doors_open', models.TimeField(blank=True, default=None, null=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.venue')),
                ('ticket_price_max', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('ticket_price_min', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('event_url', models.CharField(blank=True, max_length=512, null=True)),
                ('event_api', models.CharField(choices=[('AXS', 'AXS'), ('Crawler', 'Crawler'), ('Dice', 'Dice'), ('Eventbrite', 'Eventbrite'), ('Manual', 'Manual'), ('Open Mic Generator', 'Open Mic Generator'), ('Ticketmaster', 'Ticketmaster'), ('TIXR', 'TIXR'), ('Venuepilot', 'Venuepilot')], default='Manual', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_ticketed', models.BooleanField(default=False)),
                ('end_time', models.TimeField(blank=True, default=None, null=True)),
                ('show_event', models.BooleanField(default=True)),
                ('signup_start_time', models.TimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('cash_only', models.BooleanField(default=False)),
                ('event_image_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('event_image', models.ImageField(blank=True, upload_to='event_images')),
            ],
            options={
                'unique_together': {('venue', 'event_day', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='OpenMic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('open_mic_type', models.CharField(choices=[('All', 'All'), ('Comedy', 'Comedy'), ('Music', 'Music'), ('Spoken Word', 'Spoken Word')], default='Music', max_length=16)),
                ('description', models.TextField()),
                ('signup_start_time', models.TimeField()),
                ('event_start_time', models.TimeField()),
                ('event_end_time', models.TimeField()),
                ('all_ages', models.BooleanField(default=False)),
                ('house_piano', models.BooleanField(default=False)),
                ('house_pa', models.BooleanField(default=True)),
                ('cadence_crontab', models.CharField(max_length=64)),
                ('cadence_readable', models.CharField(max_length=128)),
                ('venue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.venue')),
                ('generate_events', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('drums', models.BooleanField(default=False)),
                ('event_mic_type', models.CharField(choices=[('Open Jam', 'Open Jam'), ('Open Mic', 'Open Mic'), ('Show', 'Show')], default='Open Mic', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='VenueTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('venue_type', models.CharField(choices=[('Bar', 'Bar'), ('Brewery', 'Brewery'), ('Coffee Shop', 'Coffee Shop'), ('Event Space', 'Event Space'), ('Shop', 'Shop')], max_length=32)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_tags', to='api.venue')),
            ],
            options={
                'unique_together': {('venue', 'venue_type')},
            },
        ),
        migrations.RunPython(
            code=api.migrations.0062_populate_venue_name_lower.Migration.venue_names_to_lower,
        ),
        migrations.AlterField(
            model_name='venue',
            name='name_lower',
            field=models.CharField(default='asdf', max_length=128, unique=True),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='venue',
            name='latitude',
            field=models.DecimalField(decimal_places=6, max_digits=11),
        ),
        migrations.AlterField(
            model_name='venue',
            name='longitude',
            field=models.DecimalField(decimal_places=6, max_digits=11),
        ),
        migrations.AlterField(
            model_name='venue',
            name='latitude',
            field=models.DecimalField(decimal_places=6, max_digits=9),
        ),
        migrations.AlterField(
            model_name='venue',
            name='longitude',
            field=models.DecimalField(decimal_places=6, max_digits=9),
        ),
        migrations.CreateModel(
            name='IngestionRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default='asdf', max_length=64)),
            ],
        ),
        migrations.AlterField(
            model_name='event',
            name='event_image',
            field=models.ImageField(blank=True, null=True, upload_to='event_images'),
        ),
        migrations.AlterField(
            model_name='venue',
            name='venue_image',
            field=models.ImageField(blank=True, null=True, upload_to='venue_images'),
        ),
        migrations.CreateModel(
            name='IngestionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_name', models.CharField(default='Manual', max_length=32)),
                ('ingestion_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ingestionrun')),
                ('change_log', models.TextField(blank=True, null=True)),
                ('change_type', models.CharField(choices=[('Create', 'Create'), ('Delete', 'Delete'), ('Error', 'Error'), ('NO OP', 'NO OP'), ('Skip', 'Skip'), ('Update', 'Update')], default='skip', max_length=16)),
            ],
        ),
        migrations.AddField(
            model_name='venue',
            name='alias',
            field=models.TextField(blank=True, max_length=1024, null=True),
        ),
        migrations.DeleteModel(
            name='VenueMask',
        ),
        migrations.RemoveField(
            model_name='event',
            name='cash_only',
        ),
        migrations.RemoveField(
            model_name='event',
            name='doors_open',
        ),
        migrations.RemoveField(
            model_name='event',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='event',
            name='event_api',
        ),
        migrations.RemoveField(
            model_name='event',
            name='is_ticketed',
        ),
        migrations.RemoveField(
            model_name='event',
            name='ticket_price_max',
        ),
        migrations.RemoveField(
            model_name='event',
            name='ticket_price_min',
        ),
        migrations.RemoveField(
            model_name='venue',
            name='gather_data',
        ),
        migrations.RemoveField(
            model_name='venue',
            name='max_capacity',
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('bio', models.TextField(blank=True, max_length=256, null=True)),
                ('name_slug', models.CharField(default='asdf', max_length=128, unique=True)),
                ('artist_image', models.ImageField(blank=True, null=True, upload_to='event_images')),
                ('artist_image_url', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('platform', models.CharField(max_length=32)),
                ('url', models.CharField(max_length=128)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.artist')),
            ],
            options={
                'unique_together': {('artist', 'platform')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='artists',
            field=models.ManyToManyField(to='api.artist'),
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_name', models.CharField(choices=[('AXS', 'AXS'), ('Bandsintown', 'Bandsintown'), ('Crawler - Blue Moon', 'Crawler - Blue Moon'), ("Crawler - Darrell's Tavern", "Crawler - Darrell's Tavern"), ('Crawler - Little Red Hen', 'Crawler - Little Red Hen'), ('Crawler - Sea Monster Lounge', 'Crawler - Sea Monster Lounge'), ('Crawler - Skylark', 'Crawler - Skylark'), ('Crawler - The Royal Room', 'Crawler - The Royal Room'), ('Dice', 'Dice'), ('Eventbrite', 'Eventbrite'), ('Manual', 'Manual'), ('Open Mic Generator', 'Open Mic Generator'), ('Songkick', 'Songkick'), ('Ticketmaster', 'Ticketmaster'), ('TIXR', 'TIXR'), ('Venuepilot', 'Venuepilot')], default='Manual', max_length=32)),
                ('event_api_id', models.CharField(max_length=64)),
                ('event_name', models.CharField(max_length=256)),
                ('venue_name', models.CharField(max_length=128)),
                ('data', models.JSONField()),
                ('event_day', models.DateField(default=datetime.datetime(2024, 6, 20, 1, 49, 22, 377601))),
                ('processed', models.BooleanField(default=False)),
            ],
            options={
                'unique_together': {('api_name', 'event_api_id')},
            },
        ),
        migrations.CreateModel(
            name='Crawler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crawler_name', models.CharField(max_length=32, unique=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.venue')),
            ],
        ),
        migrations.DeleteModel(
            name='VenueApi',
        ),
        migrations.DeleteModel(
            name='APISample',
        ),
        migrations.CreateModel(
            name='CarpenterRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='raw_datas',
            field=models.ManyToManyField(to='api.rawdata'),
        ),
        migrations.AddField(
            model_name='ingestionrecord',
            name='raw_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.rawdata'),
        ),
        migrations.AlterField(
            model_name='venue',
            name='latitude',
            field=models.DecimalField(decimal_places=5, max_digits=8),
        ),
        migrations.AlterField(
            model_name='venue',
            name='longitude',
            field=models.DecimalField(decimal_places=5, max_digits=8),
        ),
        migrations.CreateModel(
            name='CarpenterRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_name', models.CharField(default='Manual', max_length=32)),
                ('change_type', models.CharField(choices=[('Create', 'Create'), ('Delete', 'Delete'), ('Error', 'Error'), ('NO OP', 'NO OP'), ('Skip', 'Skip'), ('Update', 'Update')], max_length=16)),
                ('change_log', models.TextField(blank=True, null=True)),
                ('field_changed', models.CharField(choices=[('event', 'event'), ('venue', 'venue'), ('artist', 'artist'), ('none', 'none')], max_length=32)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.artist')),
                ('carpenter_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.carpenterrun')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.event')),
                ('raw_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rawdata')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.venue')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='finalized',
            field=models.BooleanField(default=False),
        ),
    ]
